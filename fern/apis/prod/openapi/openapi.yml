openapi: 3.0.2
info:
  title: Superagent
  description: The agent framework for large language models
  version: 0.0.99
paths:
  /api/v1/agents:
    get:
      tags:
        - Agent
      summary: List
      description: List all agents
      operationId: list_api_v1_agents_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Agent
      summary: Create
      description: Create a new agent
      operationId: create_api_v1_agents_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Agent'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Agent'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}:
    get:
      tags:
        - Agent
      summary: Get
      description: Get a single agent
      operationId: get_api_v1_agents__agent_id__get
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Agent'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Agent
      summary: Delete
      description: Delete an agent
      operationId: delete_api_v1_agents__agent_id__delete
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Agent
      summary: Update
      description: Patch an agent
      operationId: update_api_v1_agents__agent_id__patch
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Agent'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Agent'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/invoke:
    post:
      tags:
        - Agent
      summary: Invoke
      description: Invoke an agent
      operationId: invoke_api_v1_agents__agent_id__invoke_post
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__AgentInvoke'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__AgentInvoke'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/llms:
    post:
      tags:
        - Agent
      summary: Add Llm
      description: Add LLM to agent
      operationId: add_llm_api_v1_agents__agent_id__llms_post
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentLLM'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Agent'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/llms/{llm_id}:
    delete:
      tags:
        - Agent
      summary: Remove Llm
      description: Remove LLM from agent
      operationId: remove_llm_api_v1_agents__agent_id__llms__llm_id__delete
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
        - required: true
          schema:
            title: Llm Id
            type: string
          name: llm_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/tools:
    get:
      tags:
        - Agent
      summary: List Tools
      description: List agent tools
      operationId: list_tools_api_v1_agents__agent_id__tools_get
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentToolList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Agent
      summary: Add Tool
      description: Add tool to agent
      operationId: add_tool_api_v1_agents__agent_id__tools_post
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentTool'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Agent'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/tools/{tool_id}:
    delete:
      tags:
        - Agent
      summary: Remove Tool
      description: Remove tool from agent
      operationId: remove_tool_api_v1_agents__agent_id__tools__tool_id__delete
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
        - required: true
          schema:
            title: Tool Id
            type: string
          name: tool_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/datasources:
    get:
      tags:
        - Agent
      summary: List Datasources
      description: List agent datasources
      operationId: list_datasources_api_v1_agents__agent_id__datasources_get
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentDatasosurceList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Agent
      summary: Add Datasource
      description: Add datasource to agent
      operationId: add_datasource_api_v1_agents__agent_id__datasources_post
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentDatasource'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Agent'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/datasources/{datasource_id}:
    delete:
      tags:
        - Agent
      summary: Remove Datasource
      description: Remove datasource from agent
      operationId: remove_datasource_api_v1_agents__agent_id__datasources__datasource_id__delete
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
        - required: true
          schema:
            title: Datasource Id
            type: string
          name: datasource_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/agents/{agent_id}/runs:
    get:
      tags:
        - Agent
      summary: List Runs
      description: List agent runs
      operationId: list_runs_api_v1_agents__agent_id__runs_get
      parameters:
        - required: true
          schema:
            title: Agent Id
            type: string
          name: agent_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentRunList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/llms:
    get:
      tags:
        - LLM
      summary: List
      description: List all LLMs
      operationId: list_api_v1_llms_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMList'
      security:
        - HTTPBearer: []
    post:
      tags:
        - LLM
      summary: Create
      description: Create a new LLM
      operationId: create_api_v1_llms_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__LLM'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__LLM'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/llms/{llm_id}:
    get:
      tags:
        - LLM
      summary: Get
      description: Get a single LLM
      operationId: get_api_v1_llms__llm_id__get
      parameters:
        - required: true
          schema:
            title: Llm Id
            type: string
          name: llm_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__LLM'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - LLM
      summary: Update
      description: Patch an LLM
      operationId: update_api_v1_llms__llm_id__patch
      parameters:
        - required: true
          schema:
            title: Llm Id
            type: string
          name: llm_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__LLM'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__LLM'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/api-users:
    post:
      tags:
        - Api user
      summary: Create
      description: Create a new API user
      operationId: create_api_v1_api_users_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
  /api/v1/api-users/me:
    get:
      tags:
        - Api user
      summary: Get
      description: Get a single api user
      operationId: get_api_v1_api_users_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Api user
      summary: Delete
      description: Delete an api user
      operationId: delete_api_v1_api_users_me_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - HTTPBearer: []
  /api/v1/datasources:
    get:
      tags:
        - Datasource
      summary: List
      description: List all datasources
      operationId: list_api_v1_datasources_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceList'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Datasource
      summary: Create
      description: Create a new datasource
      operationId: create_api_v1_datasources_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Datasource'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Datasource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/datasources/{datasource_id}:
    get:
      tags:
        - Datasource
      summary: Get
      description: Get a specific datasource
      operationId: get_api_v1_datasources__datasource_id__get
      parameters:
        - required: true
          schema:
            title: Datasource Id
            type: string
          name: datasource_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Datasource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Datasource
      summary: Delete
      description: Delete a specific datasource
      operationId: delete_api_v1_datasources__datasource_id__delete
      parameters:
        - required: true
          schema:
            title: Datasource Id
            type: string
          name: datasource_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Datasource
      summary: Update
      description: Update a specific datasource
      operationId: update_api_v1_datasources__datasource_id__patch
      parameters:
        - required: true
          schema:
            title: Datasource Id
            type: string
          name: datasource_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Datasource'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Datasource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/tools:
    get:
      tags:
        - Tool
      summary: List
      description: List all tools
      operationId: list_api_v1_tools_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolList'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Tool
      summary: Create
      description: Create a new tool
      operationId: create_api_v1_tools_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Tool'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Tool'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/tools/{tool_id}:
    get:
      tags:
        - Tool
      summary: Get
      description: Get a specific tool
      operationId: get_api_v1_tools__tool_id__get
      parameters:
        - required: true
          schema:
            title: Tool Id
            type: string
          name: tool_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Tool'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Tool
      summary: Delete
      description: Delete a specific tool
      operationId: delete_api_v1_tools__tool_id__delete
      parameters:
        - required: true
          schema:
            title: Tool Id
            type: string
          name: tool_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Tool
      summary: Update
      description: Update a specific tool
      operationId: update_api_v1_tools__tool_id__patch
      parameters:
        - required: true
          schema:
            title: Tool Id
            type: string
          name: tool_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Tool'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Tool'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/workflows:
    get:
      tags:
        - Workflow
      summary: List
      description: List all workflows
      operationId: list_api_v1_workflows_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowList'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Workflow
      summary: Create
      description: Create a new workflow
      operationId: create_api_v1_workflows_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Workflow'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Workflow'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/workflows/{workflow_id}:
    get:
      tags:
        - Workflow
      summary: Get
      description: Get a single workflow
      operationId: get_api_v1_workflows__workflow_id__get
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Workflow'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Workflow
      summary: Delete
      description: Delete a specific workflow
      operationId: delete_api_v1_workflows__workflow_id__delete
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Workflow
      summary: Update
      description: Patch a workflow
      operationId: update_api_v1_workflows__workflow_id__patch
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app__models__request__Workflow'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Workflow'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/workflows/{workflow_id}/invoke:
    post:
      tags:
        - Workflow
      summary: Invoke
      description: Invoke a specific workflow
      operationId: invoke_api_v1_workflows__workflow_id__invoke_post
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowInvoke'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/workflows/{workflow_id}/steps:
    get:
      tags:
        - Workflow
      summary: List Steps
      description: List all steps of a workflow
      operationId: list_steps_api_v1_workflows__workflow_id__steps_get
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Workflow
      summary: Add Step
      description: Create a new workflow step
      operationId: add_step_api_v1_workflows__workflow_id__steps_post
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStep'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__models__response__Workflow'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/workflows/{workflow_id}/steps/{step_id}:
    delete:
      tags:
        - Workflow
      summary: Delete Step
      description: Delete a specific workflow step
      operationId: delete_step_api_v1_workflows__workflow_id__steps__step_id__delete
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
          name: workflow_id
          in: path
        - required: true
          schema:
            title: Step Id
            type: string
          name: step_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
components:
  schemas:
    AgentDatasosurceList:
      title: AgentDatasosurceList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    AgentDatasource:
      title: AgentDatasource
      required:
        - datasourceId
      type: object
      properties:
        datasourceId:
          title: Datasourceid
          type: string
    AgentLLM:
      title: AgentLLM
      required:
        - llmId
      type: object
      properties:
        llmId:
          title: Llmid
          type: string
    AgentList:
      title: AgentList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    AgentRunList:
      title: AgentRunList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    AgentTool:
      title: AgentTool
      required:
        - toolId
      type: object
      properties:
        toolId:
          title: Toolid
          type: string
    AgentToolList:
      title: AgentToolList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    ApiUser:
      title: ApiUser
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
    DatasourceList:
      title: DatasourceList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    LLMList:
      title: LLMList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    ToolList:
      title: ToolList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    WorkflowInvoke:
      title: WorkflowInvoke
      required:
        - input
        - enableStreaming
      type: object
      properties:
        input:
          title: Input
          type: string
        enableStreaming:
          title: Enablestreaming
          type: boolean
    WorkflowList:
      title: WorkflowList
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: array
          items:
            type: object
    WorkflowStep:
      title: WorkflowStep
      required:
        - order
        - agentId
        - input
        - output
      type: object
      properties:
        order:
          title: Order
          type: integer
        agentId:
          title: Agentid
          type: string
        input:
          title: Input
          type: string
        output:
          title: Output
          type: string
    app__models__request__Agent:
      title: Agent
      required:
        - name
        - llmModel
        - description
      type: object
      properties:
        isActive:
          title: Isactive
          type: boolean
          default: true
        name:
          title: Name
          type: string
        prompt:
          title: Prompt
          type: string
        llmModel:
          title: Llmmodel
          type: string
        description:
          title: Description
          type: string
        avatar:
          title: Avatar
          type: string
    app__models__request__AgentInvoke:
      title: AgentInvoke
      required:
        - input
        - enableStreaming
      type: object
      properties:
        input:
          title: Input
          type: string
        sessionId:
          title: Sessionid
          type: string
        enableStreaming:
          title: Enablestreaming
          type: boolean
    app__models__request__Datasource:
      title: Datasource
      required:
        - name
        - description
        - type
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        type:
          title: Type
          type: string
        url:
          title: Url
          type: string
        metadata:
          title: Metadata
          type: object
    app__models__request__LLM:
      title: LLM
      required:
        - provider
        - apiKey
      type: object
      properties:
        provider:
          title: Provider
          type: string
        apiKey:
          title: Apikey
          type: string
        options:
          title: Options
          type: object
    app__models__request__Tool:
      title: Tool
      required:
        - name
        - description
        - type
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        type:
          title: Type
          type: string
        metadata:
          title: Metadata
          type: object
        returnDirect:
          title: Returndirect
          type: boolean
    app__models__request__Workflow:
      title: Workflow
      required:
        - name
        - description
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
    app__models__response__Agent:
      title: Agent
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
    app__models__response__AgentInvoke:
      title: AgentInvoke
      required:
        - success
        - data
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
    app__models__response__Datasource:
      title: Datasource
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
    app__models__response__LLM:
      title: LLM
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
    app__models__response__Tool:
      title: Tool
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
    app__models__response__Workflow:
      title: Workflow
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
        data:
          title: Data
          type: object
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
