/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as SuperAgent from "../../..";
export declare namespace AgentDocuments {
    interface Options {
        environment: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class AgentDocuments {
    protected readonly _options: AgentDocuments.Options;
    constructor(_options: AgentDocuments.Options);
    /**
     * List all agent documents
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    listAgentDocuments(request?: SuperAgent.ListAgentDocumentsApiV1AgentDocumentsGetRequest): Promise<unknown>;
    /**
     * Create a agent document
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    createAgentDocument(request: SuperAgent.AgentDocument): Promise<unknown>;
    /**
     * Get a specific agent document
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    getAgentDocument(agentDocumentId: string): Promise<unknown>;
    /**
     * Delete a specific agent document
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    deleteAgentDocument(agentDocumentId: string): Promise<unknown>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
