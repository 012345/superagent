/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as SuperAgent from "../../..";
export declare namespace AgentTools {
    interface Options {
        environment: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class AgentTools {
    protected readonly _options: AgentTools.Options;
    constructor(_options: AgentTools.Options);
    /**
     * List all agent tools
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    listAgentTools(request?: SuperAgent.ListAgentToolsApiV1AgentToolsGetRequest): Promise<unknown>;
    /**
     * Create a agent tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    createAgentTool(request: SuperAgent.AgentTool): Promise<unknown>;
    /**
     * Get a specific agent tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    getAgentTool(agentToolId: string): Promise<unknown>;
    /**
     * Delete a specific agent tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    deleteAgentTool(agentToolId: string): Promise<unknown>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
