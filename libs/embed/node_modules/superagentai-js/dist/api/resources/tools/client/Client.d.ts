/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as SuperAgent from "../../..";
export declare namespace Tools {
    interface Options {
        environment: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Tools {
    protected readonly _options: Tools.Options;
    constructor(_options: Tools.Options);
    /**
     * List all tools
     */
    listTools(): Promise<unknown>;
    /**
     * Create a new tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    createATool(request: SuperAgent.Tool): Promise<unknown>;
    /**
     * Get a specific tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    getTool(toolId: string): Promise<unknown>;
    /**
     * Patch a specific tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    patchTool(toolId: string, request: Record<string, unknown>): Promise<unknown>;
    /**
     * Delete a specific tool
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    deleteTool(toolId: string): Promise<unknown>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
