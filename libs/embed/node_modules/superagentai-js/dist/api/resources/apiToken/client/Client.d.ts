/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import * as SuperAgent from "../../..";
export declare namespace ApiToken {
    interface Options {
        environment: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class ApiToken {
    protected readonly _options: ApiToken.Options;
    constructor(_options: ApiToken.Options);
    /**
     * List all API tokens
     */
    listApiTokens(): Promise<unknown>;
    /**
     * Create a new API token
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    createApiToken(request: SuperAgent.ApiToken): Promise<unknown>;
    /**
     * Get a specific API token
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    getApiToken(tokenId: string): Promise<unknown>;
    /**
     * Delete a specific API token
     * @throws {@link SuperAgent.UnprocessableEntityError}
     */
    deleteApiToken(tokenId: string): Promise<unknown>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
