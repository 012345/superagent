apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -c -f docker-compose.yml -f docker-compose.app.yml -f docker-compose.deps.yml -o ../../helm
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: minio
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -c -f docker-compose.yml -f docker-compose.app.yml -f docker-compose.deps.yml -o ../../helm
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/substituted-files-default: "true"
        io.kompose.service: minio
    spec:
      containers:
        - args:
            - minio
            - server
            - /data/minio
            - --console-address
            - :9090
          env:
            - name: MINIO_ROOT_PASSWORD
              value: password
            - name: MINIO_ROOT_USER
              value: root
          image: minio/minio:latest
          name: minio
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
            - containerPort: 9000
          resources: {}
          volumeMounts:
            - mountPath: /data/minio
              name: minio
      restartPolicy: Always
      volumes:
        - name: minio
          persistentVolumeClaim:
            claimName: minio
status: {}
